---
import Sidebar from "../components/Sidebar.astro";

import { dictionary } from "../data/dictionary";
import { ClientRouter } from "astro:transitions";


import { onBeforeRender } from 'astro';

export const prerender = true;

export async function getStaticPaths() {
  return [
    { params: { lang: 'es' } },
    { params: { lang: 'en' } },
  ];
}

export async function get({ params }) {
  const lang = params.lang || defaultLang;
  return {
    props: {
      language: lang,
    },
  };
}
/* function changeLanguage(event: Event) {
   const target = event.currentTarget;
  if (target) {
    language = (target as HTMLElement).getAttribute("data-language") || defaultLanguage;
    alert(language)
  } 
} */

const {title} = Astro.props
---

<!doctype html>
<html lang="en" class="dark">
  <head>
    <meta charset="UTF-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <link rel="icon" type="image/svg+xml" href="/favicon.svg" />
    <link
      href="https://cdn.jsdelivr.net/npm/tailwindcss@2.2.19/dist/tailwind.min.css"
      rel="stylesheet"
    />

    <!-- Font Jost -->
    <link rel="preconnect" href="https://fonts.googleapis.com" />
    <link rel="preconnect" href="https://fonts.gstatic.com" crossorigin />
    <link
      href="https://fonts.googleapis.com/css2?family=Jost:ital,wght@0,100..900;1,100..900&display=swap"
      rel="stylesheet"
    />
    <title>{title}</title>
    
    
    <ClientRouter />
  </head>
  <!-- bg-customBackground bg-repeat bg-cover -->
  <body
    class="h-full grid grid-cols-1 text-white bg-gray-300 dark:bg-gray-900 bg-customBackground bg-repeat bg-cover font-jost"
  >
    <slot />
  </body>
</html>
<style is:global>
  :root {
    --var-dark-bg: #0b3c67;
    --var-light-bg: #f3f4f6;
    --var-dark-text: #f3f4f6;
    --var-light-text: #111827;
  }
</style>

<script>
  document.addEventListener("DOMContentLoaded", () => {
    const languageIcons = document.querySelectorAll(".language-icon");
    languageIcons.forEach((icon) => {
      icon.addEventListener("click", () => {
        const lang = icon?.getAttribute("data-language") || 'es';
        document.cookie = `language=${lang}; path=/`;
        window.location.reload();
      });
    });
  });
</script>
