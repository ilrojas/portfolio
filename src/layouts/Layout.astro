---
import { ClientRouter } from "astro:transitions";
import Sidebar from "../components/Sidebar.astro";
import Welcome from "../components/Welcome.astro";
import Technology from "../components/Technology.astro";

import Footer from "../components/Footer.astro";
import SectionTech from "../components/SectionTech.astro";
import NavBar from "../components/NavBar.astro";
import { dictionary } from "../data/dictionary";
import Badge from "../components/Badge.astro";
import { effect } from "astro:schema";

/* import { onBeforeRender } from 'astro';

export const prerender = true;

export async function getStaticPaths() {
  return [
    { params: { lang: 'es' } },
    { params: { lang: 'en' } },
  ];
}

export async function get({ params }) {
  const lang = params.lang || defaultLang;
  return {
    props: {
      language: lang,
    },
  };
} */

const { title, defaultLanguage } = Astro.props;
---

<!doctype html>
<html lang="en" class="dark">
  <head>
    <meta charset="UTF-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <link rel="icon" type="image/svg+xml" href="/favicon.svg" />
    <link
      href="https://cdn.jsdelivr.net/npm/tailwindcss@2.2.19/dist/tailwind.min.css"
      rel="stylesheet"
    />

    <link rel="preconnect" href="https://fonts.googleapis.com" />
    <link rel="preconnect" href="https://fonts.gstatic.com" crossorigin />
    <!-- Font Jost -->
    <link
      href="https://fonts.googleapis.com/css2?family=Jost:ital,wght@0,100..900;1,100..900&display=swap"
      rel="stylesheet"
    />

    <!-- Font Rubik -->
    <link
      href="https://fonts.googleapis.com/css2?family=Rubik+Vinyl&display=swap"
      rel="stylesheet"
    />

    <!-- Font Inter -->
    <link
      href="https://fonts.googleapis.com/css2?family=Inter:ital,opsz,wght@0,14..32,100..900;1,14..32,100..900&display=swap"
      rel="stylesheet"
    />
    <!-- Font Inter Tight -->
    <link
      href="https://fonts.googleapis.com/css2?family=Inter+Tight:ital,wght@0,100..900;1,100..900&display=swap"
      rel="stylesheet"
    />

    <title>{title}</title>

    <ClientRouter />
  </head>
  <body
    class="h-full grid grid-cols-1 text-black/70 dark:text-white bg-white font-inter box-content"
  >
    <div class="bg-white dark:bg-[#101828]">
      <NavBar defaultLanguage={defaultLanguage} />
      <SectionTech defaultLanguage={defaultLanguage} />
      <!-- <Wave /> -->
      <span class="hidden" id="lang" data-lang={defaultLanguage}></span>

      <!-- <div class=""><Sidebar defaultLanguage={language} /></div> -->

      <div
        class="grid grid-cols-1 left-0 w-full bg-gray-200 dark:bg-gradient-to-b dark:from-[#101828] dark:via-[#1e2939] dark:to-[#2c3849] min-h-screen"
      >
        <main class="px-4">
          <div class="pb-4 lg:pb-4"></div>
          <slot />
        </main>
        <Footer defaultLanguage={defaultLanguage} />
      </div>
    </div>
  </body>
</html>
<style is:global>
  :root {
    --var-dark-bg: #0b3c67;
    --var-light-bg: #f3f4f6;
    --var-dark-text: #f3f4f6;
    --var-light-text: #111827;
    --var-progress-tech-skill-light: #94a3b8;
    --var-progress-tech-skill-dark: #164e63;
  }

  .animatedScroll {
    animation: scroll linear;
    animation-timeline: view();
    animation-range: entry 0 cover 25%;
  }
  @keyframes scroll {
    from {
      opacity: 0;
      transform: scale(0.5);
    }
    to {
      opacity: 1;
      transform: scale(1);
    }
  }

  .menuLink:hover > :not(:hover) {
    filter: blur(1px);
    opacity: 0.5;
  }
</style>
<script is:inline>
  /*############# PARA EL SWITCHER DE TEMA #############*/
  const iconsToggle = {
    moon: `<svg xmlns="http://www.w3.org/2000/svg" width="14px" height="14px" viewBox="0 0 36 36"><circle cx="18" cy="18" r="18" fill="#66757f"/><g fill="#5b6876"><circle cx="10.5" cy="8.5" r="3.5"/><circle cx="20" cy="16" r="3"/><circle cx="21.5" cy="27.5" r="3.5"/><circle cx="21" cy="6" r="2"/><circle cx="3" cy="18" r="1"/><circle cx="30" cy="9" r="1"/><circle cx="15" cy="31" r="1"/><circle cx="32" cy="19" r="2"/><circle cx="10" cy="23" r="2"/></g></svg>`,
    sun: `<svg xmlns="http://www.w3.org/2000/svg" width="15px" height="15px" viewBox="0 0 512 512"><path fill="#ffc639" d="m260.622 42.537l58.117-39.696c3.641-2.487 8.643-1.147 10.552 2.828l30.483 63.437a7.2 7.2 0 0 0 7.035 4.062l70.179-5.32c4.397-.333 8.058 3.328 7.725 7.725l-5.32 70.179a7.2 7.2 0 0 0 4.062 7.035l63.437 30.483c3.975 1.91 5.315 6.911 2.828 10.552l-39.696 58.117a7.2 7.2 0 0 0 0 8.123l39.696 58.117c2.487 3.641 1.147 8.643-2.828 10.552l-63.437 30.483a7.2 7.2 0 0 0-4.062 7.035l5.32 70.179c.333 4.397-3.328 8.058-7.725 7.725l-70.179-5.32a7.2 7.2 0 0 0-7.035 4.062l-30.483 63.437c-1.91 3.975-6.911 5.315-10.552 2.828l-58.117-39.696a7.2 7.2 0 0 0-8.123 0l-58.117 39.696c-3.641 2.487-8.643 1.147-10.552-2.828l-30.483-63.437a7.2 7.2 0 0 0-7.035-4.062l-70.179 5.32c-4.397.333-8.058-3.328-7.725-7.725l5.32-70.179a7.2 7.2 0 0 0-4.062-7.035L6.228 328.731c-3.975-1.91-5.315-6.911-2.828-10.552l39.696-58.117a7.2 7.2 0 0 0 0-8.123L3.401 193.821c-2.487-3.641-1.147-8.643 2.828-10.552l63.437-30.483a7.2 7.2 0 0 0 4.062-7.035l-5.32-70.179c-.333-4.397 3.328-8.058 7.725-7.725l70.179 5.32a7.2 7.2 0 0 0 7.035-4.062L183.83 5.668c1.91-3.975 6.911-5.315 10.552-2.828l58.117 39.696a7.2 7.2 0 0 0 8.123.001"/><circle cx="256.56" cy="256" r="194.415" fill="#ffe564"/></svg>`,
  };

  const checkbox = document.getElementById("toggleTheme");
  const icon = document.getElementById("iconToggle");
  const doc = document.documentElement;
  if (checkbox && icon) {
    icon.innerHTML = iconsToggle.moon;

    if (checkbox instanceof HTMLInputElement) {
      checkbox.addEventListener("change", () => {
        if (typeof iconsToggle === "undefined") {
          console.error("La variable iconsToggle no está definida.");
          return;
        }
        if (icon) {
          icon.innerHTML = checkbox.checked
            ? iconsToggle.sun
            : iconsToggle.moon;
        }

        doc.classList.toggle("dark", !checkbox.checked);
      });
    } else {
      console.error("El elemento con id 'toggleTheme' no es un input válido.");
    }
  }

  function loadLevelsSkills() {    

    let levelSkill = document.querySelectorAll(".levelSkill");
    let barLevelSkill = document.querySelectorAll(".barLevelSkill");

    barLevelSkill.forEach((el) => {      
      let barLevelSkill = el.dataset.bar;
      let index = 0;
      let interval = null;
      interval = setInterval(() => {
      if (index >= barLevelSkill) {
        clearInterval(interval);
      } else {
        index++;
        el.setAttribute("style", `width: ${index}%`);
      }
      }, 10);
    });

    levelSkill.forEach((el) => {      
      let levelSkillValue = el.dataset.level;
      let index=0
      let interval = null;
      interval = setInterval(() => {
        if (index >= levelSkillValue) {
          clearInterval(interval);
        } else {
          index++;
          el.innerHTML = `${index}`;
        }
      }, 100);
    
    });
    
  }

  const observer = new IntersectionObserver((entries) => {
    entries.forEach((entry) => {
      if (entry.isIntersecting) {
        loadLevelsSkills();
        observer.unobserve(entry.target);
      }
    });
  });
  const target = document.getElementById("skills");
  if (target) {
    observer.observe(target);
  }
  

  /*############# PARA EL SWITCHER DE TEMA #############*/
</script>
