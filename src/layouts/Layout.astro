---
import { ClientRouter } from "astro:transitions";
import Footer from "../components/Footer.astro";
import NavBar from "../components/NavBar.astro";

const { title, defaultLanguage } = Astro.props;

console.log("Server loaded");
---

<!doctype html>
<html lang="en" class="">
  <head>
    <meta charset="UTF-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <link rel="icon" type="image/svg+xml" href="/favicon.svg" />
    <link
      href="https://cdn.jsdelivr.net/npm/tailwindcss@2.2.19/dist/tailwind.min.css"
      rel="stylesheet"
    />

    <link rel="preconnect" href="https://fonts.googleapis.com" />
    <link rel="preconnect" href="https://fonts.gstatic.com" crossorigin />
    
     <link
      href="https://fonts.googleapis.com/css2?family=Jost:ital,wght@0,100..900;1,100..900&display=swap"
      rel="stylesheet"
    /> 
    <link rel="stylesheet" href="/src/css/styles.css" />


    
     <link
      href="https://fonts.googleapis.com/css2?family=Inter:ital,opsz,wght@0,14..32,100..900;1,14..32,100..900&display=swap"
      rel="stylesheet"
    /> 
    
     <link
      href="https://fonts.googleapis.com/css2?family=Inter+Tight:ital,wght@0,100..900;1,100..900&display=swap"
      rel="stylesheet"
    /> 
    
     <link href="https://fonts.googleapis.com/css2?family=Caveat:wght@400..700&display=swap" rel="stylesheet"> 

    <title>{title}</title>

    <ClientRouter />
  </head>
  <body
    class="h-full w-full grid grid-cols-1 text-black/70 dark:text-white bg-white font-inter box-content"
  >
    <div class="bg-[#f9f9f9] dark:bg-[#101828] w-full">
      <NavBar defaultLanguage={defaultLanguage} />
      <span class="hidden" id="lang" data-lang={defaultLanguage}></span>
      <div
        class="grid grid-cols-1 left-0 min-h-screen bg-[radial-gradient(circle,_rgba(6,182,212,0.3)_1px,_transparent_1px)] dark:bg-[radial-gradient(circle,_rgba(255,255,255,0.08)_1px,_transparent_1px)] [background-size:30px_30px]"
      >
      
        <main class="px-4 ">
          <div class="pb-4 lg:pb-4"></div>
          <slot />
        </main>
        
        <Footer defaultLanguage={defaultLanguage} />
      </div>
    </div>
  </body>
</html>
<style is:global>
  :root {
    --var-dark-bg: #0b3c67;
    --var-light-bg: #f3f4f6;
    --var-dark-text: #f3f4f6;
    --var-light-text: #111827;
    --var-progress-tech-skill-light: #94a3b8;
    --var-progress-tech-skill-dark: #164e63;
  }

  .animatedScroll {
    animation: scroll linear;
    animation-timeline: view();
    animation-range: entry 0 cover 25%;
  }

  .delay-1000-custom {
  animation-delay: 1000ms;
}

  

  
  @keyframes scroll {
    from {
      opacity: 0;
       transform: scale(0.7); 
    }
    to {
      opacity: 1;
      transform: scale(1); 
    }
  }

  .menuLink:hover > :not(:hover) {
    filter: blur(1px);
    opacity: 0.5;    
  }

.skills:hover > :not(:hover) {
    filter: blur(1px);
    filter:grayscale(0.5);
    opacity: 0.5;    
  }

  @media screen and (min-width: 1024px) {
  .section-projects > * {
    transition: all 0.3s ease; /* Aplica una transición suave a todas las propiedades */
  }
  
  /* .hidden-description {
      
        scale: 0;}

  .section-projects:hover > :hover {
    scale: 1.05;
    filter:contrast(1.2) saturate(1);
    .hidden-description {
      display: block;
      scale: 1;
      transition: scale 0.5s ease-in-out;
      @starting-style{
        scale: 0;
      }
    }
    .visible-description{
      display: none;
    }
  } */

  /* .hidden-description {
    max-height: 0;
  overflow: hidden;
  transition: max-height 0.2s ease-in;
} */
/* .visible-description{
  transition: max-height 0.5s ease-in-out;
    } */

.section-projects:hover > :hover {
  
    .hidden-description {
      max-height: 370px;
          
    }
    .visible-description{
      max-height: 0;
    }
}


   .section-projects:hover > :not(:hover) {
    filter: blur(0.1px);
    opacity: 0.8;
  } 
}

  .custom-shadow-light {
    box-shadow: inset 4px 2px 3px rgba(0, 0, 0, 0.3); /* Cambia el color de la sombra */
  }
  .custom-shadow-dark {
    box-shadow: inset -3px 1px 3px rgba(135, 134, 134, 0.3); /* Cambia el color de la sombra */
  }

  
</style>



<script is:inline>
  const iconsToggle = {
    moon: `<svg xmlns="http://www.w3.org/2000/svg" width="18px" height="18px" viewBox="0 0 36 36"><circle cx="18" cy="18" r="18" fill="#66757f"/><g fill="#5b6876"><circle cx="10.5" cy="8.5" r="3.5"/><circle cx="20" cy="16" r="3"/><circle cx="21.5" cy="27.5" r="3.5"/><circle cx="21" cy="6" r="2"/><circle cx="3" cy="18" r="1"/><circle cx="30" cy="9" r="1"/><circle cx="15" cy="31" r="1"/><circle cx="32" cy="19" r="2"/><circle cx="10" cy="23" r="2"/></g></svg>`,
    sun: `<svg xmlns="http://www.w3.org/2000/svg" width="18px" height="18px" viewBox="0 0 512 512"><path fill="#ffc639" d="m260.622 42.537l58.117-39.696c3.641-2.487 8.643-1.147 10.552 2.828l30.483 63.437a7.2 7.2 0 0 0 7.035 4.062l70.179-5.32c4.397-.333 8.058 3.328 7.725 7.725l-5.32 70.179a7.2 7.2 0 0 0 4.062 7.035l63.437 30.483c3.975 1.91 5.315 6.911 2.828 10.552l-39.696 58.117a7.2 7.2 0 0 0 0 8.123l39.696 58.117c2.487 3.641 1.147 8.643-2.828 10.552l-63.437 30.483a7.2 7.2 0 0 0-4.062 7.035l5.32 70.179c.333 4.397-3.328 8.058-7.725 7.725l-70.179-5.32a7.2 7.2 0 0 0-7.035 4.062l-30.483 63.437c-1.91 3.975-6.911 5.315-10.552 2.828l-58.117-39.696a7.2 7.2 0 0 0-8.123 0l-58.117 39.696c-3.641 2.487-8.643 1.147-10.552-2.828l-30.483-63.437a7.2 7.2 0 0 0-7.035-4.062l-70.179 5.32c-4.397.333-8.058-3.328-7.725-7.725l5.32-70.179a7.2 7.2 0 0 0-4.062-7.035L6.228 328.731c-3.975-1.91-5.315-6.911-2.828-10.552l39.696-58.117a7.2 7.2 0 0 0 0-8.123L3.401 193.821c-2.487-3.641-1.147-8.643 2.828-10.552l63.437-30.483a7.2 7.2 0 0 0 4.062-7.035l-5.32-70.179c-.333-4.397 3.328-8.058 7.725-7.725l70.179 5.32a7.2 7.2 0 0 0 7.035-4.062L183.83 5.668c1.91-3.975 6.911-5.315 10.552-2.828l58.117 39.696a7.2 7.2 0 0 0 8.123.001"/><circle cx="256.56" cy="256" r="194.415" fill="#ffe564"/></svg>`,
  };
  let icon = document.getElementById("iconToggle");

  function initialize() {
    console.log("Initializing layout");
    let defLang = localStorage.getItem("language") || "es";
    
    // Si ya estamos en la URL correcta, no redirigir
    if (!window.location.pathname.startsWith(`/${defLang}`)) {
      window.location.href = `/${defLang}`;
    }
    /*############# PARA EL SWITCHER DE TEMA #############*/
    const checkbox = document.getElementById("toggleTheme");    
    if (checkbox && icon) {
      if (checkbox instanceof HTMLInputElement) {
        let doc = document.documentElement;        
        checkbox?.addEventListener("change", () => {
          if (typeof iconsToggle === "undefined") {
            console.error("La variable iconsToggle no está definida.");
            return;
          }
          if (icon) {
            if (checkbox.checked) {
              icon.innerHTML = iconsToggle.sun;
              localStorage.setItem("theme", "light");
              doc.classList.toggle("light", checkbox.checked);
            } else {
              icon.innerHTML = iconsToggle.moon;
              localStorage.setItem("theme", "dark");
              doc.classList.toggle("dark", !checkbox.checked);
            }
          }
          doc.classList.toggle("dark", !checkbox.checked);
        });
      } else {
        console.error(
          "El elemento con id 'toggleTheme' no es un input válido."
        );
      }
    }
    /*############# PARA EL SWITCHER DE TEMA #############*/

    /*############# PARA EL RANKING DE LOS SKILLS #############*/
    const observer = new IntersectionObserver((entries) => {
      entries.forEach((entry) => {
        if (entry.isIntersecting) {
          loadLevelsSkills();
          observer.unobserve(entry.target);
        }
      });
    });
    const target = document.getElementById("skills");
    if (target) {
      observer.observe(target);
    }
    /*############# PARA EL RANKING DE LOS SKILLS #############*/

    /*############# PARA EL SWITCHER DE LENGUAJES #############*/    
    document
      .getElementById("language-icon-es")
      ?.addEventListener("click", (e) => {
        changeLanguage(e.currentTarget.getAttribute("data-language"));
      });
    document
      .getElementById("language-icon-en")
      ?.addEventListener("click", (e) => {
        changeLanguage(e.currentTarget.getAttribute("data-language"));
      });
    document.addEventListener("click", (e)=>{ toggleMenu(e.target)});
    /*############# PARA EL SWITCHER DE LENGUAJES #############*/

    /*############# PARA LOS BOTONES DE MOSTRAR Y CERRAR EL MENU EN DISP SM #############*/
    const toggleButton = document.getElementById("navbar-toggle");
    const navbarClose = document.getElementById("navbar-close");
    const nav = document.getElementById("navbar");
    const menuContent = document.getElementById("menu-content");
    const menuContentHeader = document.getElementById("menu-content-header");
    toggleButton?.addEventListener("click", () => {
      let isHidden = nav?.classList.contains("w-0");
      if (isHidden) {
        nav?.classList.remove("w-0");
        nav?.classList.add("w-60");
      } else {
        nav?.classList.remove("w-60");
        nav?.classList.add("w-0");
      }
      let isHidden2 = menuContent?.classList.contains("w-0");
      if (isHidden2) {
        menuContent?.classList.remove("w-0");
        menuContent?.classList.add("w-60");
        menuContent?.classList.toggle("p-2", isHidden2);
        menuContent?.classList.toggle("p-4", isHidden2);

        menuContentHeader?.classList.remove("w-0");
        menuContentHeader?.classList.add("w-full");
      } else {
        menuContent?.classList.remove("w-60");
        menuContent?.classList.add("w-0");

        menuContentHeader?.classList.remove("w-full");
        menuContentHeader?.classList.add("w-0");
      }
    });
    navbarClose.addEventListener("click", () => {
      let isHidden2 = menuContent?.classList.contains("w-0");
      menuContent?.classList.toggle("p-2", isHidden2);
      menuContent?.classList.toggle("p-4", isHidden2);

      nav?.classList.remove("w-60");
      nav?.classList.add("w-0");

      menuContent?.classList.remove("w-60");
      menuContent?.classList.add("w-0");

      menuContentHeader?.classList.remove("w-full");
      /* menuContentHeader?.classList.add("w-0"); */
    });
    /*############# PARA LOS BOTONES DE MOSTRAR Y CERRAR EL MENU EN DISP SM #############*/


    loadTheme();
    loadDataExperience();
  }

  function loadDataExperience() {
      let experience = document.querySelectorAll(".experience");

      experience.forEach((el) => {
        let experienceValue = el.dataset.experience;
        let index = 0;
        let interval = null;
        interval = setInterval(() => {
          if (index >= experienceValue) {
            
            
            let nextElement = el.nextElementSibling;
              let text = nextElement.dataset.text;
              nextElement.innerHTML = text;
              nextElement.classList.add("animate-moveFromRight");
            clearInterval(interval);

          } else {
            index++;
            el.innerHTML = `${index}`;
          }
        }, 100);
      });
    }

  function loadLevelsSkills() {
      let levelSkill = document.querySelectorAll(".levelSkill");
      let barLevelSkill = document.querySelectorAll(".barLevelSkill");

      barLevelSkill.forEach((el) => {
        let barLevelSkill = el.dataset.bar;
        let index = 0;
        let interval = null;
        interval = setInterval(() => {
          if (index >= barLevelSkill) {
            clearInterval(interval);
          } else {
            index++;
            el.setAttribute("style", `width: ${index}%`);
          }
        }, 10);
      });

      levelSkill.forEach((el) => {
        let levelSkillValue = el.dataset.level;
        
            el.innerHTML = `${levelSkillValue}`;
      });
    }
    
  function changeLanguage (lang) {
      localStorage.setItem("language", lang);
      console.log(localStorage.getItem("language") + `*`);
      window.location.href = `/${lang}`;
    };

  function toggleMenu (target){
      const iconSwitch = document.querySelector("#icon-switch-language");
      const menu = document.querySelector("#language-menu");

      // ASEGÚRATE DE QUE ESTÁS MANEJANDO EL EVENTO PARA EL ELEMENTO CORRECTO
      if (iconSwitch?.contains(target)) {
        menu?.classList.toggle("lg:hidden");
      } // Si se hace click fuera del menú o del botón, ocultar el menú
      else if (!menu?.contains(target)) {
        menu?.classList.add("lg:hidden");
      }
    };

  function loadTheme() {    
    let defTheme = localStorage.getItem("theme") || "dark";
    const doc = document.documentElement;
    doc.classList.toggle("dark", defTheme === "dark");
    if (defTheme === "light") {
      document.getElementById("toggleTheme").checked = true;
      icon.innerHTML = iconsToggle.sun;
    } else {
      document.getElementById("toggleTheme").checked = false;
      icon.innerHTML = iconsToggle.moon;
    }
  }
  loadTheme();
  document.addEventListener("DOMContentLoaded", () => {
    initialize();
    loadTheme();
  });

  // Escuchar cambios de ruta para volver a ejecutar la función de inicialización
  window.addEventListener("popstate", () => {
    initialize();
  });

  // Escuchar cambios de hash para volver a ejecutar la función de inicialización
  window.addEventListener("hashchange", () => {
    initialize();
  });

  // Escuchar cambios de navegación para volver a ejecutar la función de inicialización
  document.addEventListener("astro:after-swap", () => {
    loadTheme();
    initialize();
  });
  console.log("Layout loaded");
</script>
